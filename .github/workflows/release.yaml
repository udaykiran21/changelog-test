name: Auto Release PR

on:
  pull_request:
    types: [closed]

jobs:
  release:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Determine release type from PR title
        id: bump
        run: |
          title="${{ github.event.pull_request.title }}"
          if [[ "$title" == \[major\]* ]]; then
            echo "type=major" >> $GITHUB_OUTPUT
          elif [[ "$title" == \[minor\]* ]]; then
            echo "type=minor" >> $GITHUB_OUTPUT
          elif [[ "$title" == \[patch\]* ]]; then
            echo "type=patch" >> $GITHUB_OUTPUT
          else
            echo "type=none" >> $GITHUB_OUTPUT
          fi

      - name: Stop if no bump type
        if: steps.bump.outputs.type == 'none'
        run: echo "No version bump requested. Skipping release."

      - name: Set git author
        if: steps.bump.outputs.type != 'none'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Run standard-version
        if: steps.bump.outputs.type != 'none'
        run: npm run release:${{ steps.bump.outputs.type }}

      - name: Get bumped version
        if: steps.bump.outputs.type != 'none'
        id: version
        run: |
          # Read version from package.json
          version=$(node -p "require('./package.json').version")
          echo "bumped_version=$version" >> $GITHUB_OUTPUT

      - name: Create release branch
        if: steps.bump.outputs.type != 'none'
        run: |
          branch_name="release/v${{ steps.version.outputs.bumped_version }}"
          git checkout -b $branch_name
          echo "branch_name=$branch_name" >> $GITHUB_OUTPUT

      - name: Extract latest changelog section
        if: steps.bump.outputs.type != 'none'
        id: changelog
        run: |
          # Get the first changelog section (the latest release)
          awk '/^## / {if(p) exit; p=1} p' CHANGELOG.md > latest_changelog.md
          echo "latest_changelog<<EOF" >> $GITHUB_OUTPUT
          cat latest_changelog.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Push release branch
        if: steps.bump.outputs.type != 'none'
        run: git push origin HEAD

      - name: Create pull request into main
        if: steps.bump.outputs.type != 'none'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore(release): bump version and update changelog"
          branch: ${{ steps.bump.outputs.branch_name }}
          title: "Release: v${{ steps.version.outputs.bumped_version }}"
          body: |
            This PR was created automatically by GitHub Actions to bump the version
            and update the changelog based on PR #${{ github.event.pull_request.number }}.

            ### Changelog
            ${{ steps.changelog.outputs.latest_changelog }}
          base: main
